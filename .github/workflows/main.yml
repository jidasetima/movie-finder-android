name: Build and Test
run-name: ${{ github.actor }} has triggered Main Workflow from a ${{ github.event_name }} event
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and clone repository branch ${{ github.ref }}
        uses: actions/checkout@v4
      - name: Create app.properties configuration file
        run: echo "TMDB_API_KEY = ${{ secrets.TMDB_API_KEY }}" > app.properties
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - run: echo "The build job's status is ${{ job.status }}."
  check-version-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and clone repository branch ${{ github.ref }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch the entire history, including all branches
      - name: Extract version code from Pull Request branch ${{ github.ref }}
        run: |
          VERSION_PR=$(grep -oP '(?<=versionCode = )\d+' app/build.gradle.kts)
          echo "version_pr=${VERSION_PR}" >> $GITHUB_ENV
      - name: Extract version code from Main branch
        run: |
          git checkout main
          VERSION_MAIN=$(grep -oP '(?<=versionCode = )\d+' app/build.gradle.kts)
          echo "version_main=${VERSION_MAIN}" >> $GITHUB_ENV
      - name: Compare ${{ github.ref }} branch and Main branch versions
        run: |
          if [ "$version_pr" -l "$version_main" ]; then
            echo "VersionCode on PR branch ($version_pr) is not greater than on the main branch ($version_main)."
            exit 1
          else
            echo "VersionCode on PR branch is greater than on the main branch."
          fi
  unit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and clone repository branch ${{ github.ref }}
        uses: actions/checkout@v4
      - name: Create app.properties configuration file
        run: echo "TMDB_API_KEY = ${{ secrets.TMDB_API_KEY }}" > app.properties
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run release unit tests
        run: ./gradlew testReleaseUnitTest
      - run: echo "The unit-test job's status is ${{ job.status }}."
  instrumented_test:
    needs: build
    runs-on: [ macos-12 ]
    steps:
      - name: Checkout and clone repository branch ${{ github.ref }}
        uses: actions/checkout@v4
      - name: Create app.properties configuration file
        run: echo "TMDB_API_KEY = ${{ secrets.TMDB_API_KEY }}" > app.properties
      - name: set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedDebugAndroidTest
      - run: echo "The unit-test job's status is ${{ job.status }}."